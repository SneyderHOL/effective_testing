Using dvdrental database.

Challenge:

Challenge: SELECT
# Grab the first and last name of every customer and their email address.
SELECT first_name, last_name, email FROM customer;


Challenge: SELECT DISTINCT
# Retrieve the distinct rating types our films could have in our database.
SELECT DISTINCT(rating) FROM film;


Challenge: SELECT WHERE
# A customer forgot their wallet at our store! We need to track down their email to inform them. What is the email for the customer with the name Nancy Thomas?
SELECT email FROM customer WHERE first_name = 'Nancy' AND last_name = 'Thomas';

# A customer wants to know what the movie "Outlaw Hanky" is about. Could you give them the description for the movie "Outlaw Hanky"?
SELECT description FROM film WHERE title = 'Outlaw Hanky';


Challenge: ORDER BY
# We eant to reward our first 10 paying customers. What are the customer ids of the first 10 customers who created a paymentd?
SELECT customer_id FROM payment ORDER BY payment_Date LIMIT 10;

# A customer wants to quickly rent a video to watch over their short lunch break. What are the titles of the 5 shortest (in length of runtime) movies?
SELECT title, length FROM film ORDER BY length LIMIT 5;

# if the previous customer can watch any movie that is 50 minutes oor less isn run time, how many options does he/she have?
SELECT COUNT(title) FROM film WHERE length <= 50;

Challenge: General
# How many payment transactions were greater than $ 5.00?
SELECT COUNT(*) FROM payment WHERE amount > 5;

# How many actors have a first name that starts with the letter P?
SELECT COUNT(*) FROM actor WHERE first_name LIKE 'P%';

# How many unique districts are our customers from?
SELECT COUNT(DISTINCT(district)) FROM address;

# Retrieve the list of names for those distinct district from the previous question.
SELECT DISTINCT(district) FROM address;

# How many films have a rating of R and a replacement cost between $5 and $15?
SELECT COUNT(*) FROM film WHERE rating = 'R' AND replacement_cost BETWEEN 5 AND 15;

# How many films have the word Truman somewhere in the title?
SELECT COUNT(*) FROM film WHERE title LIKE '%Truman%';


Challenge: GROUP BY
# We have two staff members, with Staff IDs 1 and 2. We want to give a bonus to the staff member that handled the most payments. (Most in terms of number of payments processed, not total dollar amount). How many payments did each staff member handle and who gets the bonus?
SELECT staff_id, COUNT(*) AS payments_processed FROM payment
GROUP BY staff_id ORDER BY payments_processed DESC;

# Corporate HQ is conducting a study on the relationship between replacement cost and a movie MPAA rating(e.g. G, PG, R, etc...). What is the average replacement cost per MPAA rating?
SELECT rating, AVG(replacement_cost) AS avg_replacement_cost FROM film
GROUP BY rating;

# We are running a promotion to reward our top 5 customers with coupons. What are the customer ids of the top 5 customers by total spend?
SELECT customer_id, SUM(amount) AS total_spent FROM payment
GROUP BY customer_id ORDER BY total_spent DESC LIMIT 5;

Challenge: HAVING
# We are launching a platinum service for our most loyal customers. We will assign platinum status to customers that have had 40 or more transaction payments. What customer ids are eligible for platinum status?
SELECT customer_id, COUNT(*) AS total_transactions FROM payment
GROUP BY customer_id HAVING COUNT(*) >= 40;

# What are the customer ids of customers who have spent more than $100 in payment transactions with our staff_id memeber 2?
SELECT customer_id, SUM(amount) AS total_spent FROM payment
WHERE staff_id = 2
GROUP BY customer_id HAVING SUM(amount) >= 100;



ASSESSMENT TEST 1

COMPLETE THE FOLLOWING TASKS!

1. Return the customer IDs of customers who have spent at least $110 with the staff member who has an ID of 2.

The answer should be customers 187 and 148.

SELECT customer_id, SUM(amount) AS total_spent FROM payment
WHERE staff_id = 2
GROUP BY customer_id HAVING SUM(amount) >= 110;


2. How many films begin with the letter J?

The answer should be 20.

SELECT COUNT(*) FROM film
WHERE title LIKE 'J%';

3. What customer has the highest customer ID number whose name starts with an 'E' and has an address ID lower than 500?

The answer is Eddie Tomlin

SELECT first_name, last_name FROM customer
WHERE first_name LIKE 'E%' AND address_id < 500
ORDER BY customer_id DESC LIMIT 1;


Challenge: JOINS
# California sales tax laws have change and we need to alert our customers to this through email. What are the emails of the customers who live in California?
SELECT email FROM address
INNER JOIN customer ON
address.address_id = customer.address_id
WHERE district = 'California';

# A customer walks in and is a huge fan of the actor "Nick Wahlberg" and wants to know which movies he is in. Get a list of all the movies "Nick Wahlberg" has been in.


Challenge: Timestamps and EXTRACT
# During which months did payments occur? Format your answer to return back the full month name
SELECT DISTINCT(TO_CHAR(payment_date, 'MONTH')) FROM payment;

# How many payments occurred on Monday?
SELECT COUNT(*) FROM payment WHERE TO_CHAR(payment_date, 'ID') = '1';
SELECT COUNT(*) FROM payment WHERE EXTRACT(dow FROM payment_date) = 1;


Exercises using mathematical functions and operators:
# I wanted to know the percentage that a rental rate versus a replacement cost happens to be.
SELECT ROUND(rental_rate/replacement_cost, 4) * 100 AS percent_cost FROM film;

# Put small deposits down of 10 percent of the replacement.
SELECT 0.1 * replacement_cost AS deposit FROM film;


Exercises using String functions and operators:
# Length of a text field
SELECT LENGTH(first_name) FROM customer;

# Concatenate two text fields
SELECT first_name || ' ' || last_name AS full_name FROM customer;

# Concatenation using UPPER function
SELECT UPPER(first_name) || ' ' || UPPER(last_name) AS full_name FROM customer;

# Create email address for some customer using LEFT to substract the # of character of a field and LOWER functions to pass the content of a field to lowercase
SELECT LOWER(LEFT(first_name, 1)) || LOWER(last_name) || '@gmail.com' AS email FROM customer;


Exercise using subquery and EXISTS
# Retrive the films that have a rental rate that is higher than the average rental rate for all the films
SELECT title, rental_rate FROM film
WHERE rental_rate > (SELECT AVG(rental_rate) FROM film); #1 result in subquery

# Films that have been returned between may 29 of 2005 and may 30 of 2005
SELECT film_id, title FROM film
WHERE film_id IN
(SELECT inventory.film_id FROM rental
INNER JOIN inventory
ON inventory.inventory_id = rental.inventory_id
WHERE return_date BETWEEN '2005-05-29' AND '2005-05-30');

# Find customers that have a least one payment whose amount is greater than $11 and we actually want to grab the first_name and last_name of those customers.
SELECT first_name, last_name FROM customer AS c
WHERE EXISTS(
	SELECT * FROM payment AS p WHERE p.customer_id = c.customer_id
	AND amount > 11);

EXISTS just checks to see if rows exists in the actual return subquery.


Exercises using SELF JOIN
Are useful for comparing values in a column of rows withing the sam table.

# Find all the pairs of films that have the same length
SELECT f1.title, f2.title, f1.length FROM film AS f1
INNER JOIN film AS f2
ON f1.film_id != f2.film_id AND f1.length = f2.length;


Using exercises database

ASSESSMENT TEST 1
1. How can you retrieve all the information from the cd.facilities table?
SELECT * FROM cd.facilities;

2. You want to print out a list of all of the facilities and their cost to
members. How would you retrieve a list of only facility names and
costs?
SELECT name, membercost FROM cd.facilities;

3. How can you produce a list of facilities that charge a fee to members?
 - Expected Results should have just 5 rows
SELECT * FROM cd.facilities WHERE membercost > 0;

4. How can you produce a list of facilities that charge a fee to members,
and that fee is less than 1/50th of the monthly maintenance cost?
Return the facid, facility name, member cost, and monthly
maintenance of the facilities in question.
 - Result is just two rows
SELECT * FROM cd.facilities WHERE membercost > 0 AND membercost < monthlymaintenance/50;

5. How can you produce a list of all facilities with the word 'Tennis' in their
name?
 - Expected Result is 3 rows
SELECT * FROM cd.facilities WHERE name LIKE '%Tennis%';

6. How can you retrieve the details of facilities with ID 1 and 5? Try to do it
without using the OR operator.
 - Expected Result is 2 rows
SELECT * FROM cd.facilities WHERE facid IN (1, 5);

7. How can you produce a list of members who joined after the start of
September 2012? Return the memid, surname, firstname, and joindate
of the members in question.
 - Expected Result is 10 rows
SELECT memid, surname, firstname, joindate FROM cd.members WHERE joindate >= '2012-09-01';

8. How can you produce an ordered list of the first 10 surnames in the
members table? The list must not contain duplicates.
 - Expected Result should be 10 rows if you include GUEST as a
last name
SELECT DISTINCT(surname) FROM cd.members ORDER BY surname LIMIT 10;

9. You'd like to get the signup date of your last member. How can you
retrieve this information?
 - Expected Result
 - 2012-09-26 18:08:45
SELECT joindate FROM cd.members ORDER BY joindate DESC LIMIT 1;

10. Produce a count of the number of facilities that have a cost to guests of
10 or more.
 - Expected Result
 - 6
SELECT COUNT(*) FROM cd.facilities WHERE guestcost >= 10;

11. Produce a list of the total number of slots booked per facility in the
month of September 2012. Produce an output table consisting of facility
id and slots, sorted by the number of slots.
 - Expected Result is 9 rows
SELECT facid, SUM(slots) AS number_of_slots FROM cd.bookings
WHERE starttime BETWEEN '2012-09-01' AND '2012-10-01'
GROUP BY facid ORDER BY number_of_slots;
* BETWEEN operator and dates sometimes it will treat it as exclusive or inclusive, depending on the system and how it thinks of the end of a day (starts at zero hundred hours or ends at twenty four hundred hours)

12. Produce a list of facilities with more than 1000 slots booked. Produce an
output table consisting of facility id and total slots, sorted by facility id.
 - Expected Result is 5 rows
SELECT facid, SUM(slots) AS number_of_slots FROM cd.bookings
GROUP BY facid HAVING SUM(slots) > 1000 ORDER BY facid;

13. How can you produce a list of the start times for bookings for tennis
courts, for the date '2012-09-21'? Return a list of start time and facility
name pairings, ordered by the time.
 - Expected Result is 12 rows
SELECT starttime AS start, name FROM cd.bookings AS b
INNER JOIN cd.facilities AS f
ON b.facid = f.facid
WHERE b.starttime BETWEEN '2012-09-21' AND '2012-09-22'
AND f.name ILIKE '%tennis court%'
ORDER BY b.starttime;

14. How can you produce a list of the start times for bookings by members
named 'David Farrell'?
 - Expected result is 34 rows of timestamps
SELECT starttime AS start, firstname || ' ' || surname AS name FROM cd.bookings AS b
INNER JOIN cd.members AS m
ON b.memid = m.memid
WHERE m.firstname = 'David' AND m.surname = 'Farrell';
